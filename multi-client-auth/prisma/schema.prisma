// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model App {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(dbgenerated("NOW()")) @map("created_at") @db.DateTime
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @map("updated_at") @db.DateTime
  name      String   @db.VarChar(32)
  secret    String   @unique @db.VarChar(64)

  @@map("s_apps")
}

model Employee {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(dbgenerated("NOW()")) @map("created_at") @db.DateTime
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @map("updated_at") @db.DateTime
  email     String   @unique @db.VarChar(128)
  password  String   @db.VarChar(64)
  active    Boolean  @default(true)
  super     Boolean  @default(false)
  phone     String   @unique @db.Char(11)

  @@map("s_employees")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(dbgenerated("NOW()")) @map("created_at") @db.DateTime
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @map("updated_at") @db.DateTime
  email     String   @unique @db.VarChar(128)
  password  String   @db.VarChar(64)
  active    Boolean  @default(true)

  @@map("s_users")
}

// When refreshing an access_token or when a refresh_token expires, delete the corresponding records.
model AuthToken {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(dbgenerated("NOW()")) @map("created_at") @db.DateTime
  updatedAt    DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @map("updated_at") @db.DateTime
  accessToken  String   @unique @map("access_token") @db.VarChar(64)
  refreshToken String   @unique @map("refresh_token") @db.VarChar(64)
  appId        Int      @map("app_id")
  accountId    Int      @map("account_id")

  @@index([appId, accountId])
  @@map("s_auth_tokens")
}

model CasbinRule {
  id    Int     @id @default(autoincrement())
  ptype String
  v0    String?
  v1    String?
  v2    String?
  v3    String?
  v4    String?
  v5    String?

  @@map("s_casbin_rules")
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(dbgenerated("NOW()")) @map("created_at") @db.DateTime
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @map("updated_at") @db.DateTime
  name      String   @db.VarChar(32)
  appId     Int      @map("app_id")

  @@unique([appId, name])
  @@index([appId])
  @@map("s_roles")
}
